# Pipeline for test/docker infrastructure
# Pipeline renders comment content and, if run for GitHub PR,
# posts the comment to the GitHub PR that triggered the comment,
pr:
  branches:
    include:
    - main
  paths:
    include:
    - test/docker/
    exclude:
    - test/logs/

pool:
  vmImage: ubuntu-latest

variables:
  TerraformBuildUrl: '$(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)'
  TerraformLogsPath: '$(System.DefaultWorkingDirectory)/test/docker'

steps:
    - displayName: 'Script Usage'
      bash: |
        '$(System.DefaultWorkingDirectory)/terraform-pr-comment.sh' --help

    # Terraform validate (before fmt, otherwise fmt may issue validation errors)
    - displayName: 'Render PR Comment - Terraform validate'
      bash: |
        source '$(System.DefaultWorkingDirectory)/terraform-pr-comment.sh' \
          --verbose \
          --command validate \
          --logs-path '$(TerraformLogsPath)' \
          --build-number '$(Build.BuildNumber)' \
          --build-url '$(TerraformBuildUrl)'
        echo "##vso[task.setvariable variable=TERRAFORM_VALIDATE_PR_COMMENT]$TERRAFORM_COMMAND_PR_COMMENT"
    - displayName: 'Comment PR - Terraform validate'
      task: GitHubComment@0
      condition: and(not(eq(variables['System.PullRequest.PullRequestId'], '')), ne(variables['TERRAFORM_VALIDATE_PR_COMMENT'], ''))
      inputs:
        gitHubConnection: 'mloskot'
        repositoryName: '$(Build.Repository.Name)'
        comment: $(TERRAFORM_VALIDATE_PR_COMMENT)

    # Terraform fmt
    - displayName: 'Render PR Comment - Terraform fmt'
      bash: |
        source '$(System.DefaultWorkingDirectory)/terraform-pr-comment.sh' \
          --verbose \
          --command fmt \
          --logs-path '$(TerraformLogsPath)' \
          --build-number '$(Build.BuildNumber)' \
          --build-url '$(TerraformBuildUrl)'
        echo "##vso[task.setvariable variable=TERRAFORM_FMT_PR_COMMENT]$TERRAFORM_COMMAND_PR_COMMENT"
    - displayName: 'Comment PR - Terraform fmt'
      task: GitHubComment@0
      condition: and(not(eq(variables['System.PullRequest.PullRequestId'], '')), ne(variables['TERRAFORM_FMT_PR_COMMENT'], ''))
      inputs:
        gitHubConnection: 'mloskot'
        repositoryName: '$(Build.Repository.Name)'
        comment: $(TERRAFORM_FMT_PR_COMMENT)

    # Terraform plan
    - displayName: 'Render PR Comment - Terraform plan'
      bash: |
        source '$(System.DefaultWorkingDirectory)/terraform-pr-comment.sh' \
          --verbose \
          --command plan \
          --logs-path '$(TerraformLogsPath)' \
          --build-number '$(Build.BuildNumber)' \
          --build-url '$(TerraformBuildUrl)'
        echo "##vso[task.setvariable variable=TERRAFORM_PLAN_PR_COMMENT]$TERRAFORM_COMMAND_PR_COMMENT"
    - displayName: 'Comment PR - Terraform plan'
      task: GitHubComment@0
      condition: and(not(eq(variables['System.PullRequest.PullRequestId'], '')), ne(variables['TERRAFORM_PLAN_PR_COMMENT'], ''))
      inputs:
        gitHubConnection: 'mloskot'
        repositoryName: '$(Build.Repository.Name)'
        comment: $(TERRAFORM_PLAN_PR_COMMENT)
