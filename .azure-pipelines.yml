# Pipeline renders comment content and, if run for GitHub PR,
# posts the comment to the GitHub PR that triggered the comment.
trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
    # Terraform validate
    - bash: |
        THIS_BUILD_URL='$(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)'
        source '$(System.DefaultWorkingDirectory)/terraform-pr-comment.sh' validate '$(System.DefaultWorkingDirectory)/test' "$THIS_BUILD_URL"
        echo "##vso[task.setvariable variable=TERRAFORM_VALIDATE_PR_COMMENT]$TERRAFORM_COMMAND_PR_COMMENT"
      displayName: 'Render PR Comment - Terraform validate'
    - task: GitHubComment@0
      condition: and(not(eq(variables['System.PullRequest.PullRequestId'], '')), ne(variables['TERRAFORM_VALIDATE_PR_COMMENT'], ''))
      inputs:
        gitHubConnection: 'mloskot'
        repositoryName: '$(Build.Repository.Name)'
        comment: $(TERRAFORM_VALIDATE_PR_COMMENT)
      displayName: 'Comment PR - Terraform validate'

    # Terraform fmt
    - bash: |
        source '$(System.DefaultWorkingDirectory)/terraform-pr-comment.sh' fmt '$(System.DefaultWorkingDirectory)/test' '$(Build.BuildNumber)'
        echo "##vso[task.setvariable variable=TERRAFORM_FMT_PR_COMMENT]$TERRAFORM_COMMAND_PR_COMMENT"
      displayName: 'Render PR Comment - Terraform fmt'
    - task: GitHubComment@0
      condition: and(not(eq(variables['System.PullRequest.PullRequestId'], '')), ne(variables['TERRAFORM_FMT_PR_COMMENT'], ''))
      inputs:
        gitHubConnection: 'mloskot'
        repositoryName: '$(Build.Repository.Name)'
        comment: $(TERRAFORM_FMT_PR_COMMENT)
      displayName: 'Comment PR - Terraform fmt'

    # Terraform plan
    - bash: |
        source '$(System.DefaultWorkingDirectory)/terraform-pr-comment.sh' plan '$(System.DefaultWorkingDirectory)/test' '$(Build.BuildNumber)'
        echo "##vso[task.setvariable variable=TERRAFORM_PLAN_PR_COMMENT]$TERRAFORM_COMMAND_PR_COMMENT"
      displayName: 'Render PR Comment - Terraform plan'
    - task: GitHubComment@0
      condition: and(not(eq(variables['System.PullRequest.PullRequestId'], '')), ne(variables['TERRAFORM_PLAN_PR_COMMENT'], ''))
      inputs:
        gitHubConnection: 'mloskot'
        repositoryName: '$(Build.Repository.Name)'
        comment: $(TERRAFORM_PLAN_PR_COMMENT)
      displayName: 'Comment PR - Terraform plan'
